{"version":3,"sources":["sort.js","App.js","index.js"],"names":["useSortableData","data","sortmethod","sortkey","React","useState","method","setMethod","key","setKey","sorteddata","setSorteddata","queue","setQueue","useEffect","console","log","tempdata","sort","a","b","reverse","accessdata","idx","tempqueue","elemtopush","filter","_elem","i","push","unshift","changeMethod","methodName","changeKey","keyName","App","type","useSortabledata","datax","Form","Select","onChange","e","target","value","Table","striped","bordered","hover","onClick","style","cursor","map","elem","id","name","age","rootElement","document","getElementById","createRoot","render"],"mappings":"6MAiFeA,EAhFS,SAACC,EAAMC,EAAYC,GACzC,MAA4BC,IAAMC,SAASH,GAAW,mBAA/CI,EAAM,KAAEC,EAAS,KACxB,EAAsBF,mBAASF,GAAQ,mBAAhCK,EAAG,KAAEC,EAAM,KAClB,EAAoCJ,mBAASJ,GAAK,mBAA3CS,EAAU,KAAEC,EAAa,KAChC,EAA0BN,mBAASJ,GAAK,mBAAjCW,EAAK,KAAEC,EAAQ,KACtBC,qBAAU,WACRC,QAAQC,IAAIV,EAAQE,EACtB,GAAG,IASHM,qBAAU,WACR,IAAIG,EAAQ,YAAOhB,GACL,OAAVK,IACFW,EAASC,MAAK,SAACC,EAAGC,GAChB,OAAID,EAAEX,GAAOY,EAAEZ,IACL,EAED,CAEX,IACAG,EAAcM,IAED,QAAXX,IACFW,EAASC,MAAK,SAACC,EAAGC,GAChB,OAAID,EAAEX,GAAOY,EAAEZ,GACN,GAEC,CAEZ,IACAG,EAAcM,IAEG,QAAff,GACFS,EAAcC,GAEG,QAAfV,GACFS,EAAcC,EAAMS,UAExB,GAAG,CAACf,EAAQM,EAAOJ,IA2BnB,MAAO,CACLE,aACAH,YACAE,SACAa,WA9BiB,SAACC,GAClBR,QAAQC,IAAI,iBAAkBO,GAC9B,IAAIC,EAAS,YAAOZ,GAChBa,EAAaD,EAAUD,GAC3BC,EAAYA,EAAUE,QAAO,SAACC,EAAOC,GACnC,OAAIL,IAAQK,CAId,IACe,QAAXtB,GACFkB,EAAUK,KAAKJ,GAEF,QAAXnB,GACFkB,EAAUM,QAAQL,GAEL,QAAXnB,IACFS,QAAQC,IAAI,WACZH,EAASW,GACTb,EAAca,IAED,QAAXlB,IACFO,EAASW,EAAUH,WACnBV,EAAca,EAAUH,WAE5B,EAMEU,aApEmB,SAACC,GACpBjB,QAAQC,IAAIgB,EAAYxB,GACxBD,EAAUyB,EACZ,EAkEEC,UAjEgB,SAACC,GACjBnB,QAAQC,IAAIkB,EAAS5B,GACrBG,EAAOyB,EACT,EAgEF,E,OCvBeC,EAnDH,WACV,MAAwB9B,mBAAS,OAAM,mBAAhC+B,EAAI,KACX,GADoB,KACE/B,mBAAS,SAAO,mBAA/BG,EAAG,KAAEC,EAAM,KAClB,EAAqC4B,EAAgBC,IAAOF,EAAM5B,GAA1DE,EAAU,EAAVA,WAAYqB,EAAY,EAAZA,aACpB,OACE,gCACE,8BACE,8BACE,eAACQ,EAAA,EAAKC,OAAM,CACVC,SAAU,SAACC,GAAC,OAAKX,EAAaW,EAAEC,OAAOC,MAAM,EAC7C,aAAW,yBAAwB,UAEnC,wBAAQA,MAAM,MAAK,SAAC,cACpB,wBAAQA,MAAM,MAAK,SAAC,eACpB,wBAAQA,MAAM,MAAK,SAAC,wBACpB,wBAAQA,MAAM,MAAK,SAAC,8BAI1B,eAACC,EAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,YAC3B,gCACE,+BACE,oBAAIC,QAAS,kBAAMxC,EAAO,KAAK,EAAEyC,MAAO,CAAEC,OAAQ,WAAY,SAAC,OAG/D,oBAAIF,QAAS,kBAAMxC,EAAO,OAAO,EAAEyC,MAAO,CAAEC,OAAQ,WAAY,SAAC,SAGjE,oBAAIF,QAAS,kBAAMxC,EAAO,MAAM,EAAEyC,MAAO,CAAEC,OAAQ,WAAY,SAAC,aAKpE,gCACGzC,EAAW0C,KAAI,SAACC,EAAM9B,GACrB,OACE,+BACE,6BAAK8B,EAAKC,KACV,6BAAKD,EAAKE,OACV,6BAAKF,EAAKG,QAGhB,SAGJ,8BAAMhD,IACN,8BAAM4B,MAGZ,EClDMqB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,EAAG,M","file":"static/js/main.539f2a0a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nconst useSortableData = (data, sortmethod, sortkey) => {\n  const [method, setMethod] = React.useState(sortmethod);\n  const [key, setKey] = useState(sortkey);\n  const [sorteddata, setSorteddata] = useState(data);\n  const [queue, setQueue] = useState(data);\n  useEffect(() => {\n    console.log(method, key);\n  }, []);\n  const changeMethod = (methodName) => {\n    console.log(methodName, key);\n    setMethod(methodName);\n  };\n  const changeKey = (keyName) => {\n    console.log(keyName, method);\n    setKey(keyName);\n  };\n  useEffect(() => {\n    let tempdata = [...data];\n    if (method == \"ASC\") {\n      tempdata.sort((a, b) => {\n        if (a[key] < b[key]) {\n          return -1;\n        } else {\n          return 1;\n        }\n      });\n      setSorteddata(tempdata);\n    }\n    if (method === \"DSC\") {\n      tempdata.sort((a, b) => {\n        if (a[key] < b[key]) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      setSorteddata(tempdata);\n    }\n    if (sortmethod === \"LRU\") {\n      setSorteddata(queue);\n    }\n    if (sortmethod === \"MRU\") {\n      setSorteddata(queue.reverse());\n    }\n  }, [method, queue, key]);\n  const accessdata = (idx) => {\n    console.log(\"data access...\", idx);\n    let tempqueue = [...queue];\n    let elemtopush = tempqueue[idx];\n    tempqueue = tempqueue.filter((_elem, i) => {\n      if (idx === i) {\n        return false;\n      }\n      return true;\n    });\n    if (method === \"LRU\") {\n      tempqueue.push(elemtopush);\n    }\n    if (method === \"MRU\") {\n      tempqueue.unshift(elemtopush);\n    }\n    if (method === \"LRU\") {\n      console.log(\"done...\");\n      setQueue(tempqueue);\n      setSorteddata(tempqueue);\n    }\n    if (method === \"MRU\") {\n      setQueue(tempqueue.reverse());\n      setSorteddata(tempqueue.reverse());\n    }\n  };\n  return {\n    sorteddata,\n    setMethod,\n    setKey,\n    accessdata,\n    changeMethod,\n    changeKey\n  };\n};\nexport default useSortableData;\n","import { useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport datax from \"./data\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"react-bootstrap/Form\";\nimport useSortabledata from \"./sort\";\nconst App = () => {\n  const [type, setType] = useState(\"DSC\");\n  const [key, setKey] = useState(\"name\");\n  const { sorteddata, changeMethod } = useSortabledata(datax, type, key);\n  return (\n    <div>\n      <div>\n        <div>\n          <Form.Select\n            onChange={(e) => changeMethod(e.target.value)}\n            aria-label=\"Default select example\"\n          >\n            <option value=\"ASC\">Ascending</option>\n            <option value=\"DSC\">Descending</option>\n            <option value=\"LRU\">Least recently used</option>\n            <option value=\"MRU\">Most recently used</option>\n          </Form.Select>\n        </div>\n      </div>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th onClick={() => setKey(\"id\")} style={{ cursor: \"pointer\" }}>\n              id\n            </th>\n            <th onClick={() => setKey(\"name\")} style={{ cursor: \"pointer\" }}>\n              name\n            </th>\n            <th onClick={() => setKey(\"age\")} style={{ cursor: \"pointer\" }}>\n              age\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {sorteddata.map((elem, idx) => {\n            return (\n              <tr>\n                <td>{elem.id}</td>\n                <td>{elem.name}</td>\n                <td>{elem.age}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <div>{key}</div>\n      <div>{type}</div>\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}